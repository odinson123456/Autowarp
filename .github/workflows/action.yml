# This is a basic workflow to help you get started with Actions

name: Revanced

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12' 
      - name: Check test
        env:
         EVENT: ${{github.event_name}}
        id: check
        run: | 
          echo $EVENT
          if [[ $EVENT = "workflow_dispatch" -a $EVENT = "push" ]]
          then
            echo "Dispatch or push"
          fi
          pip install --upgrade pip
          pip install -q requests
          echo "${{ secrets.CHECK }}" >> check.py
          ok=$(python3 check.py)
          if [[ $ok != "ok" ]]
          then
            printf "No new updates.\nExiting..."
          else
            printf "Updates found.\nBuilding.."
          fi
          if [[ $EVENT = "workflow_dispatch" -a $EVENT = "push" ]]
          then
            echo status="ok" >> "$GITHUB_OUTPUT"
          else
            echo status=$ok >> "$GITHUB_OUTPUT"
          fi
      - name: Setup Java
        if: steps.check.outputs.status == 'ok'
        run: |
          echo "JAVA_HOME=$JAVA_HOME_17_X64" >> $GITHUB_ENV
      - name: Build
        if: steps.check.outputs.status == 'ok'
        env:
          UTILS: ${{ secrets.UTILS }}
        run: |
          pip install -q -r requirements.txt
          echo "Requirements Installed"
          wget "$UTILS"
          echo "Utils Downloaded"
          python3 main.py
      - name: Upload
        if: steps.check.outputs.status == 'ok'
        env: 
          API_ID: ${{ secrets.API_ID }}
          API_HASH: ${{ secrets.API_HASH }}
          CHAT: ${{ secrets.CHAT }}
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          python3 upload.py
      - uses: EndBug/add-and-commit@v9
        name: Commit releases.json file 
        if: steps.check.outputs.status == 'ok'
        with:
          add: 'releases.json'
          default_author: github_actions
          message: 'Built and Uploaded'
          